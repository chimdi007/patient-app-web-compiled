{"version":3,"file":"static/js/main.dc75d10a.js","mappings":"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","sources":["services/api.js","components/SecreKeyGenerator.js","authenticationScreens/AccountActivateScreen.js","components/TOTPGenerator.js","authenticationScreens/FirstPassword.js","authenticationScreens/LoginScreen.js","authenticationScreens/TOTPscreen.js","components/Updater.js","screens/ProfileScreen.js","screens/PrescriptionsScreen.js","services/qrcodeOverlay.js","screens/AppointmentsScreen.js","screens/Correspondence.js","screens/DependantsScreen.js","navigation/RootNavigator.js","screens/HomeScreen.js","authenticationScreens/PasswordReset.js","App.js","index.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  //baseURL: 'http://192.168.1.144:5002/patient',\n  baseURL: 'https://v2iot.prescribe.ng/patient',\n});\n\nexport default api;\n","// Function to generate a random secret key\nconst SecretKeyGenerator = async() => {\n    return [...Array(32)]\n        .map(() => Math.floor(Math.random() * 16).toString(16))\n        .join('');\n};\n\nexport default SecretKeyGenerator;","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport SecretKeyGenerator from '../components/SecreKeyGenerator';\n\nconst AccountActivationScreen = ({ navigation }) => {\n  const [action, setAction] = useState('activation');\n  const [ppn, setPPN] = useState('');\n  const [nin, setNIN] = useState('');\n  const [dob, setDOB] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleAccountActivate = async () => {\n    if (!ppn || !nin) {\n      setError('Enter a valid PPN and NIN.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n  \n\n    try {\n      const secretKey = await SecretKeyGenerator();\n      //const response = await api.post('/login', { ppn, nin, dob, action, secretKey });\n      const response = await api.post('/login', {\n        ppn: String(ppn), \n        nin: String(nin), \n        action: 'activation',\n        secretKey: secretKey,\n      });\n\n      const { token, userData } = response.data;\n\n      if(userData.activationAccountFound){\n      // Save user info to AsyncStorage\n      await AsyncStorage.setItem('userToken', token);\n      await AsyncStorage.setItem('secretKey', secretKey)\n      await AsyncStorage.setItem('userData', JSON.stringify(userData));\n\n      // Navigate to the TOTP screen\n      navigation.replace('TOTP');\n      }\n    } catch (err) {\n      setError(\n        err.response?.data?.message || 'An error occurred. Please check your credentials and try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Account Activation</Text>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Private Prescription Number (PPN)\"\n        value={ppn}\n        onChangeText={setPPN}\n        keyboardType=\"default\"\n        autoCapitalize=\"none\"\n        textContentType=\"username\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"National Identification Number(NIN)\"\n        value={nin}\n        onChangeText={setNIN}\n        keyboardType=\"default\"\n        autoCapitalize=\"none\"\n        textContentType=\"username\"\n      />\n\n    <TouchableOpacity style={styles.button} onPress={handleAccountActivate} disabled={loading}>\n    {loading ? (\n        <ActivityIndicator size=\"small\" color=\"#fff\" />\n    ) : (\n        <Text style={styles.buttonText}>Activate Account</Text>\n    )}\n    </TouchableOpacity>\n\n    <Text style={styles.footerText} onPress={()=>navigation.replace('Login')}>\n        <Text style={styles.footerLink}>Back to Login Page</Text>\n    </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500', // Bright orange background\n  },\n  title: {\n    color: 'green',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingLeft: 15,\n    backgroundColor: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#008080', // Teal button\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    //opacity: loading ? 0.6 : 1,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20,\n    fontSize: 14,\n  },\n  footerText: {\n    color: '#fff',\n    marginTop: 30,\n    fontSize: 14,\n  },\n  footerLink: {\n    //color: '#FFD700', // Gold color\n    color: 'green',\n    fontWeight: 'bold',\n  },\n});\n\nexport default AccountActivationScreen;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport CryptoJS from 'crypto-js';\n\n// Custom TOTP Generation using crypto-js (HMAC-SHA1)\nconst TOTPGenerator = async (timeStep = 30, digits = 6) => {\n  try {\n    // Retrieve the secretKey stored in AsyncStorage\n    const secretKey = await AsyncStorage.getItem('secretKey');\n    if (!secretKey) {\n      throw new Error('No secretKey found in AsyncStorage');\n    }\n\n    const time = Math.floor(Date.now() / 1000 / timeStep); // Calculate the time step\n    const counter = CryptoJS.enc.Hex.parse(time.toString(16).padStart(16, '0')); // Convert time to a 16-byte counter\n\n    const hmac = CryptoJS.HmacSHA1(counter, secretKey); // Generate HMAC with secret key\n    const hmacBytes = hmac.toString(CryptoJS.enc.Hex); // Convert HMAC to hex string\n\n    // Extract dynamic 4 bytes from HMAC and generate OTP\n    const offset = parseInt(hmacBytes.charAt(hmacBytes.length - 1), 16);\n    const otp = parseInt(hmacBytes.substr(offset * 2, 8), 16) & 0x7fffffff;\n    const otpCode = otp % Math.pow(10, digits); // Ensure OTP has the desired number of digits\n\n    return otpCode.toString().padStart(digits, '0'); // Return OTP as string with leading zeros\n  } catch (error) {\n    console.error('Error generating TOTP:', error);\n    return null; // Return null in case of error\n  }\n};\n\nexport default TOTPGenerator;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport SecretKeyGenerator from '../components/SecreKeyGenerator';\nimport TOTPGenerator from '../components/TOTPGenerator';\n\nconst FirstPasswordScreen = ({ navigation }) => {\n  const [password, setPassword] = useState('');\n  const [passwordRepeat, setPasswordRepeat] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleFirstPasswordRequest = async () => {\n    if (!password || !passwordRepeat) {\n      setError('Please enter both Private Prescription Number (PPN) and password.');\n      return;\n    }\n  \n    setLoading(true);\n    setError(null);\n  \n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      const secretKey = await SecretKeyGenerator();\n      const dgotp = await TOTPGenerator();\n  \n      const response = await api.post(\n        '/first_password',\n        { password, passwordRepeat },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            secretKey: secretKey,\n            dgotp: dgotp,\n          },\n        }\n      );\n  \n      if (response.status === 200) {\n        const { newToken, userData } = response.data;\n  \n        // Save new token and user data\n        await AsyncStorage.setItem('secretKey', secretKey);   //replace secretKey after a successful MFA\n        await AsyncStorage.setItem('userToken', newToken);\n        await AsyncStorage.setItem('userData', JSON.stringify(userData));\n        navigation.replace('Home');\n      } else {\n        setError(response.data?.message || 'Unexpected response from the server.');\n      }\n    } catch (err) {\n      setError(\n        err.response?.data?.message ||\n          'An error occurred. Please check your credentials and try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  return (\n    <View style={styles.container}>\n      {/*<Text style={styles.title}>FIRST PASSWORD</Text>*/}\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n\n      \n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        textContentType=\"password\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Repeat Password\"\n        secureTextEntry\n        value={passwordRepeat}\n        onChangeText={setPasswordRepeat}\n        textContentType=\"password\"\n      />\n\n      <TouchableOpacity style={styles.button} onPress={handleFirstPasswordRequest} disabled={loading}>\n      {loading ? (\n          <ActivityIndicator size=\"small\" color=\"#fff\" />\n      ) : (\n          <Text style={styles.buttonText}>Set Password</Text>\n      )}\n      </TouchableOpacity>\n      <Text style={styles.footerText} onPress={()=>navigation.replace('Login')}>\n        <Text style={styles.footerLink}>Back</Text>\n      </Text>\n\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500', // Bright orange background\n  },\n  title: {\n    color: 'green',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingLeft: 15,\n    backgroundColor: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#008080', // Teal button\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    //opacity: loading ? 0.6 : 1,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20,\n    fontSize: 14,\n  },\n  footerText: {\n    color: '#fff',\n    marginTop: 30,\n    fontSize: 14,\n  },\n  footerLink: {\n    //color: '#FFD700', // Gold color\n    color: 'green',\n    fontWeight: 'bold',\n  },\n});\n\nexport default FirstPasswordScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport SecretKeyGenerator from '../components/SecreKeyGenerator';\n\nconst LoginScreen = ({ navigation }) => {\n  const [ppn, setPPN] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  \n\n  const handleLogin = async () => {\n    if (!ppn || !password) {\n      setError('Please enter both Private Prescription Number (PPN) and password.');\n      return;\n    }\n  \n    setLoading(true);\n    setError(null);\n\n    const secretKey = await SecretKeyGenerator();    //Generates a secret key at login with \n\n  \n    try {\n  \n      const response = await api.post('/login', {\n        ppn: String(ppn), \n        password: String(password), \n        action: 'login',\n        secretKey: secretKey,\n      });\n  \n      console.log('Response received:', response.data); // Debugging step\n  \n      const { token, userData } = response.data;\n  \n      // Save user info to AsyncStorage\n      await AsyncStorage.setItem('userToken', token);\n      await AsyncStorage.setItem('secretKey', secretKey);\n      await AsyncStorage.setItem('userData', JSON.stringify(userData));\n  \n      // Navigate to the TOTP screen\n      navigation.replace('TOTP');\n    } catch (err) {\n      console.error('Error Response:', err.response?.data); // Debugging step\n      setError(\n        err.response?.data?.message || 'An error occurred. Please check your credentials and try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>PRESCRIBE.NG</Text>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Private Prescription Number (PPN)\"\n        value={ppn}\n        onChangeText={setPPN}\n        keyboardType=\"default\"\n        autoCapitalize=\"none\"\n        textContentType=\"username\"\n      />\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Password\"\n        secureTextEntry\n        value={password}\n        onChangeText={setPassword}\n        textContentType=\"password\"\n      />\n\n    <TouchableOpacity style={styles.button} onPress={handleLogin} disabled={loading}>\n    {loading ? (\n        <ActivityIndicator size=\"small\" color=\"#fff\" />\n    ) : (\n        <Text style={styles.buttonText}>Log In</Text>\n    )}\n    </TouchableOpacity>\n\n      <Text style={styles.footerText} onPress={()=>navigation.replace('PasswordReset')}>\n        <Text style={styles.footerLink}>Forgot Password?</Text>\n      </Text>\n\n      <Text style={styles.footerText} onPress={()=>navigation.replace('Activation')}>\n        <Text style={styles.footerLink}>Account Activation</Text>\n      </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500', // Bright orange background\n  },\n  title: {\n    color: 'green',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingLeft: 15,\n    backgroundColor: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#008080', // Teal button\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    //opacity: loading ? 0.6 : 1,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20,\n    fontSize: 14,\n  },\n  footerText: {\n    color: '#fff',\n    marginTop: 30,\n    fontSize: 14,\n  },\n  footerLink: {\n    //color: '#FFD700', // Gold color\n    color: 'green',\n    fontWeight: 'bold',\n  },\n});\n\nexport default LoginScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, StyleSheet, Alert } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport TOTPGenerator from '../components/TOTPGenerator';\nimport SecretKeyGenerator from '../components/SecreKeyGenerator';\n\n\nconst TOTPscreen = ({ navigation }) => {\n  const [totp, setTOTP] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n\n  \n  const handleMultifactorAuthentication = async () => {\n    if (!totp) {\n      setError('Please enter the TOTP.');\n      return;\n    }\n  \n    setLoading(true);\n    setError(null);\n  \n    const token = await AsyncStorage.getItem('userToken'); \n    const secretKey = await SecretKeyGenerator(); \n    if (!token || !secretKey) {\n      setError('Authentication token is missing. Please log in again.');\n      setLoading(false);\n      return;\n    }\n\n    const dgotp = await TOTPGenerator();\n  \n    try {\n      const response = await api.post(\n        '/multifactor_authentication',\n        { totp: String(totp) }, // Payload\n        {\n          headers: {\n            Authorization: `Bearer ${token}`, // Attach token\n            secretKey: secretKey,\n            dgotp: dgotp,\n          },\n        }\n      );\n  \n      console.log('Response received:', response.data); // Debugging step\n  \n      const { newToken, userData } = response.data;\n  \n      // Save new token and user data\n      await AsyncStorage.setItem('secretKey', secretKey);   //replace secretKey after a successful MFA\n      await AsyncStorage.setItem('userToken', newToken);\n      await AsyncStorage.setItem('userData', JSON.stringify(userData));\n  \n      // Navigate based on action\n      if (userData.action === 'firstPassword') {\n        navigation.replace('FirstPassword');\n      } else if(userData.action==='login') {\n        navigation.replace('Home');\n      } \n    } catch (err) {\n      console.error('Error Response:', err.response?.data); // Debugging step\n      setError(\n        err.response?.data?.message ||\n        'An error occurred. Please check the TOTP and try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n  \n  \n\n  return (\n    <View style={styles.container}>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Enter OTP\"\n        value={totp}\n        onChangeText={setTOTP}\n        keyboardType=\"default\"\n        autoCapitalize=\"none\"\n        textContentType=\"username\"\n      />\n\n    <TouchableOpacity style={styles.button} onPress={handleMultifactorAuthentication} disabled={loading}>\n    {loading ? (\n        <ActivityIndicator size=\"small\" color=\"#fff\" />\n    ) : (\n        <Text style={styles.buttonText}>Verify OTP</Text>\n    )}\n    </TouchableOpacity>\n\n    <Text style={styles.footerText} onPress={()=>navigation.replace('Login')}>\n        <Text style={styles.footerLink}>Back to Login Page</Text>\n    </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500', \n  },\n  title: {\n    color: 'green',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingLeft: 15,\n    backgroundColor: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#008080', // Teal button\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    //opacity: loading ? 0.6 : 1,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20,\n    fontSize: 14,\n  },\n  footerText: {\n    color: '#fff',\n    marginTop: 30,\n    fontSize: 14,\n  },\n  footerLink: {\n    //color: '#FFD700', // Gold color\n    color: 'green',\n    fontWeight: 'bold',\n  },\n});\n\nexport default TOTPscreen;\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport TOTPGenerator from './TOTPGenerator';\n\n\n\nconst Updater = async () => {\n  try {\n    \n    // Generate OTP using the secretKey\n    const dgotp = await TOTPGenerator(); // Make sure to handle it as an async function\n    if (!dgotp) {\n      console.warn('Failed to generate OTP.');\n      return;\n    }\n\n    // Get the userToken for authorization\n    const token = await AsyncStorage.getItem('userToken');\n    if (!token) {\n      console.warn('No userToken found. Cannot fetch data.');\n      return;\n    }\n\n    // Make the API request with the OTP included in the headers\n    const response = await api.get('/updated_patient_data', {\n      headers: {\n        Authorization: `Bearer ${token}`, // Include token in the Authorization header\n        dgotp: dgotp, // Include OTP in the headers\n      },\n    });\n\n    // Check if response is valid\n    if (!response.data || !response.data.userData) {\n      console.error('Invalid response format:', response.data);\n      return;\n    }\n\n    console.log('Response received:', response.data);\n\n    // Save the updated user data to AsyncStorage\n    const { userData } = response.data;\n    await AsyncStorage.setItem('userData', JSON.stringify(userData));\n\n    return userData; // Return the updated user data if needed\n  } catch (err) {\n    console.error('Error during API request:', err);\n    return null; // Return null in case of an error\n  }\n};\n\n\nexport default Updater;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { ScrollView, View, Image, Text, Button, StyleSheet, RefreshControl, Linking } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Updater from '../components/Updater';\n\nconst ProfileScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState({});\n  \n  const handleLogout = async () => {\n    await AsyncStorage.removeItem('userToken');\n    await AsyncStorage.removeItem('userData');\n    navigation.replace('Login');\n  };\n\n  const [refreshing, setRefreshing] = useState(false);\n\n  const fetchUpdatedData = async () => {\n    try {\n      // Call the Updater function\n      const updatedUserData = await Updater();\n      \n      // If data is fetched successfully, update state\n      if (updatedUserData) {\n        setUserData(updatedUserData);\n      } else {\n        // Fallback to existing local data if Updater fails or returns null\n        const userDataString = await AsyncStorage.getItem('userData');\n        const parsedData = userDataString ? JSON.parse(userDataString) : {};\n        setUserData(parsedData);\n      }\n    } catch (error) {\n      console.error('Error in fetching updated data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUpdatedData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    fetchUpdatedData();\n  },[])\n\n  const handleFindHMO = async () => {\n    const url = 'https://prescribe.ng/';\n    const supported = await Linking.canOpenURL(url);\n  \n    if (supported) {\n      await Linking.openURL(url);\n    } else {\n      Alert.alert(`Don't know how to open this URL: ${url}`);\n    }\n  };\n\n  return (\n    <ScrollView \n      style={styles.container}\n      refreshControl={\n        <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n      }\n    >\n      <View style={styles.profileHeader}>\n        {userData?.photoUrl ? (\n          <Image source={{ uri: userData.photoUrl }} style={styles.profileImage} />\n        ) : (\n          <View style={styles.placeholderImage}>\n            <Text style={styles.placeholderText}>No Image</Text>\n          </View>\n        )}\n        <Text style={styles.userName}>{userData?.user || 'Guest'}</Text>\n      </View>\n      \n      <View style={styles.profileDetails}>\n        <Text style={styles.detailText}>\n          <Text style={styles.bold}>PPN: </Text>{userData?.ppn || 'Not found'}\n        </Text>\n        <Text style={styles.detailText}>\n          <Text style={styles.bold}>Gender: </Text>{userData?.gender || 'Not found'} ({userData?.age}yrs)\n        </Text>\n        <Text style={styles.detailText}>\n          <Text style={styles.bold}>DOB: </Text>{userData?.dob || 'Not found'} ({userData?.age}yrs)\n        </Text>\n        <Text style={styles.detailText}>\n          <Text style={styles.bold}>Address: </Text>{userData?.address || 'Not found'}\n        </Text>\n        <Text style={styles.detailText}>\n          <Text style={styles.bold}>Credit: </Text>₦{userData?.credit || 0.00}\n        </Text>\n      </View>\n\n      <View style={styles.profileDetails}>\n        <Text style={styles.sectionTitle}>Sponsors/HMO: </Text>\n        {userData?.policies?.length > 0 ? (\n          userData.policies.map((policy, index) => (\n            <View key={index} style={styles.policyRow}>\n              <Text style={styles.policyName}>{policy.sponsor.toUpperCase()}</Text>\n              <Text style={styles.policyId}>Plan: {policy.plan}({policy.policyNumber})</Text>\n              <Text style={styles.policyId}>Contact: {policy.contact}</Text>\n            </View>\n          ))\n        ) : (\n          <Text style={styles.noSponsorText}>No sponsor info available</Text>\n        )}\n      </View>\n\n      \n      <View style={styles.logoutContainer}>\n        <Button title=\"Find HMO\" onPress={handleFindHMO} color=\"#008080\" />\n      </View>\n\n      <View style={styles.logoutContainer}>\n        <Button title=\"Logout\" onPress={handleLogout} color=\"#FF6F00\" />\n      </View>\n    </ScrollView>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#f7f7f7',\n    marginTop: 20,\n    paddingTop: 20, // Added padding top for a more balanced layout\n  },\n  profileHeader: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500',\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 8,\n    marginBottom: 20, // Increased bottom margin to separate the header from the details\n    //height: '50%', // Set height to 50% of the screen height\n    justifyContent: 'center', // Vertically center the image\n  },\n  profileImage: {\n    width: 250, // Reduced size to maintain proportion\n    height: 250, // Adjusted for better fit\n    borderRadius: 90, // Make the image circular\n    borderWidth: 3,\n    borderColor: '#fff',\n    marginBottom: 10,\n    resizeMode: 'cover',\n  },\n  placeholderImage: {\n    width: 180, // Reduced size to maintain proportion\n    height: 180, // Adjusted for better fit\n    borderRadius: 90, // Make the placeholder circular\n    backgroundColor: '#ccc',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  placeholderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 10,\n  },\n  userName: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginTop: 10,\n  },\n  profileDetails: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 6,\n    elevation: 4,\n    marginBottom: 20, // Added margin bottom to create space between the details and logout button\n    flex: 1, // Added flex to allow space distribution\n  },\n  detailText: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 15, // Added more bottom margin for better spacing between details\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  logoutContainer: {\n    marginTop: 10,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 6,\n    marginBottom: 20, // Bottom margin added to create space between logout button and screen edge\n  },\n\n  //HMO-Sponsors table styling\n  policyRow: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n  },\n  policyName: {\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  policyId: {\n    color: '#666',\n    fontSize: 14,\n  },\n  noSponsorText: {\n    fontStyle: 'italic',\n    color: '#999',\n    marginTop: 8,\n  },\n  \n});\n\nexport default ProfileScreen;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  FlatList,\n  Alert,\n  RefreshControl,\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Updater from '../components/Updater';\nimport api from '../services/api';\nimport * as Location from 'expo-location'; \nimport TOTPGenerator from '../components/TOTPGenerator';\n\nconst PrescriptionsScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState({});\n  const [prescriptions, setPrescriptions] = useState([]);\n  const [selectedPrescription, setSelectedPrescription] = useState(null);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [showPharmacies, setShowPharmacies] = useState(false);\n  const [refreshing, setRefreshing] = useState(false);\n\n  const fetchUpdatedData = async () => {\n    try {\n      const updatedUserData = await Updater();\n      if (updatedUserData) {\n        setUserData(updatedUserData);\n        setPrescriptions(updatedUserData.prescriptions || []);\n      } else {\n        const userDataString = await AsyncStorage.getItem('userData');\n        const parsedData = userDataString ? JSON.parse(userDataString) : {};\n        setUserData(parsedData);\n        setPrescriptions(parsedData.prescriptions || []);\n      }\n    } catch (error) {\n      console.error('Error in fetching updated data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUpdatedData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    fetchUpdatedData();\n  },[])\n\n\n  const locatePrescriptionItem = async (sku) => {\n    try {\n      // Request location permissions\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Location access is required.');\n        return;\n      }\n  \n      // Get the user's current location\n      const location = await Location.getCurrentPositionAsync({});\n      if (!location || !location.coords) {\n        Alert.alert('Location Error', 'Unable to fetch location.');\n        return;\n      }\n  \n      // Get the user token\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        Alert.alert('Error', 'User not authenticated.');\n        return;\n      }\n\n      const dgotp = await TOTPGenerator();\n  \n      // Send request to the API with the sku and location\n      const response = await api.get(\n        `/locate_prescription_item?sku=${sku}&latitude=${location.coords.latitude}&longitude=${location.coords.longitude}`,\n        {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            dgotp: dgotp,\n         },\n        }\n      );\n  \n      if (response.status === 200) {\n        // Set pharmacies list and show them\n        setPharmacies(response.data.pharmacies || []);\n        setShowPharmacies(true);\n      } else {\n        Alert.alert('Error', 'Failed to fetch pharmacies.');\n      }\n    } catch (error) {\n      console.error('Error locating prescription:', error);\n      Alert.alert('Error', 'An unexpected error occurred.');\n    }\n  };\n  \n\n  const renderPrescription = ({ item }) => (\n    <View style={styles.prescriptionRow}>\n      <View style={styles.prescriptionInfo}>\n        <Text style={styles.infoText}>Prescription: {item.prescription}</Text>\n        <Text style={styles.infoText}>Source: {item.source}</Text>\n        <Text style={styles.infoText}>Date: {item.date}</Text>\n        <Text style={styles.infoText}>Status: {item.status}</Text>\n        <Text style={styles.infoText}>Service Pin: {item.servicePin}</Text>\n      </View>\n      <Button\n        title=\"Locate Item\"\n        color=\"#008080\"\n        onPress={() => locatePrescriptionItem(item.sku)}\n      />\n    </View>\n  );\n\n  const renderPharmacy = ({ item }) => (\n    <View style={styles.pharmacyRow}>\n      <Text style={styles.infoText}>Pharmacy: {item.pharmacy}</Text>\n      <Text style={styles.infoText}>Brand: {item.proprietaryName}</Text>\n      <Text style={styles.infoText}>Unit Price: {item.unitPrice}</Text>\n      <Text style={styles.infoText}>Location: {item.address}</Text>\n      <Text style={styles.infoText}>Distance: {item.distance}</Text>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      {!showPharmacies && (\n        <FlatList\n          data={prescriptions}\n          keyExtractor={(item, index) => index.toString()} // Use sku\n          renderItem={renderPrescription}\n          ListEmptyComponent={<Text style={styles.emptyText}>No prescriptions found.</Text>}\n          refreshControl={ // This is where RefreshControl is used\n            <RefreshControl\n              refreshing={refreshing} // Determines if the refresh indicator is visible\n              onRefresh={onRefresh}  // Callback function triggered when pulled down\n            />\n          }\n        />\n      )}\n      {showPharmacies && (\n        <View>\n          <Text style={styles.sectionTitle}>Nearby Pharmacies</Text>\n          <FlatList\n            data={pharmacies}\n            keyExtractor={(item, index) => index.toString()} // Fallback to index if id doesn't exist\n            renderItem={renderPharmacy}\n          />\n          <Button\n            title=\"Back to Prescriptions\"\n            onPress={() => {setShowPharmacies(false); setPharmacies([]);}}\n            color=\"#ff4444\"\n          />\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9',\n  },\n  prescriptionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  prescriptionInfo: {\n    flex: 1,\n    marginRight: 10,\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#333',\n  },\n  pharmacyRow: {\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 10,\n  },\n  emptyText: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#999',\n    marginTop: 20,\n  },\n  logoutButton: {\n    marginTop: 20,\n  },\n});\n\nexport default PrescriptionsScreen;\n","// QRCodeOverlay.js\nimport React from 'react';\nimport { Modal, View, Text, TouchableOpacity, StyleSheet } from 'react-native';\nimport QRCode from 'react-native-qrcode-svg';\n\nexport default function QRCodeOverlay({ visible, qrValue, onClose }) {\n  return (\n    <Modal visible={visible} transparent animationType=\"fade\">\n      <View style={styles.modalBackground}>\n        <View style={styles.modalContainer}>\n          <Text style={styles.title}>Scan Appointment QR</Text>\n          <QRCode value={qrValue} size={200} />\n          <TouchableOpacity onPress={onClose} style={styles.closeButton}>\n            <Text style={styles.closeButtonText}>Close</Text>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n}\n\nconst styles = StyleSheet.create({\n  modalBackground: { flex: 1, backgroundColor: 'rgba(0,0,0,0.6)', justifyContent: 'center', alignItems: 'center' },\n  modalContainer: { backgroundColor: 'white', padding: 20, borderRadius: 12, alignItems: 'center' },\n  title: { fontSize: 18, marginBottom: 20 },\n  closeButton: { marginTop: 20, backgroundColor: '#ddd', padding: 10, borderRadius: 6 },\n  closeButtonText: { fontWeight: '600' },\n});\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  FlatList,\n  TextInput,\n  Alert,\n  RefreshControl,\n  Platform\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker'; // Only using @react-native-picker/picker\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Updater from '../components/Updater';\nimport api from '../services/api';\nimport * as Location from 'expo-location';\nimport TOTPGenerator from '../components/TOTPGenerator';\nimport QRCodeOverlay from '../services/qrcodeOverlay';\n\nconst AppointmentsScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState({});\n  const [appointments, setAppointments] = useState([]);\n  const [showBookingForm, setShowBookingForm] = useState(false);\n  const [visible, setVisible] = useState(false);\n  const [selectedRefID, setSelectedRefID] = useState('');\n  const [refreshing, setRefreshing] = useState(false);\n  const [bookingData, setBookingData] = useState({\n    searchQuery: '',\n    appointmentType: '', \n    destinationID: '',\n    localBranchID: '',\n    localConfigID: '',\n    ppn: '',\n  });\n\n  const [cancellationReason, setCancellationReason] = useState('Cancelled by patient');\n  \n  const whoIsPatient = [    //no longer in use\n    { user: userData.user, ppn: userData.ppn },\n    { user: 'Jane Smith', ppn: 'jane_smith' },\n    { user: 'Mary Johnson', ppn: 'mary_johnson' },\n  ];\n\n  const appointmentTypes = [\n    {label: 'General Outpatient Appointment', nonproprietaryName: 'general outpatient consultation'},\n    {label: 'Dental Clinic Appointment', nonproprietaryName: 'general dental consultation'},\n    {label: 'Eye Clinic Consultation', nonproprietaryName: 'general ophthalmology consultation'},\n    {label: 'Physiotherapy Clinic', nonproprietaryName: 'general physiotherapy session'},\n  ];\n\n  const [destinationOptions, setDestinationOptions] = useState([]);\n\n  useEffect(()=>{\n    const destinationSearch = async ()=>{\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        if (status !== 'granted') {\n          Alert.alert('Permission Denied', 'Location access is required.');\n          return;\n        }\n\n        const location = await Location.getCurrentPositionAsync({});\n        if (!location || !location.coords) {\n          Alert.alert('Location Error', 'Unable to fetch location.');\n        }\n\n        const dgotp = await TOTPGenerator();\n        \n        const token = await AsyncStorage.getItem('userToken');\n        const response = await api.get(\n          `/search_destinations?appointmentType=${encodeURIComponent(bookingData.appointmentType)}&q=${bookingData.searchQuery}&latitude=${location.coords.latitude}&longitude=${location.coords.longitude}`,\n          {\n            headers: { Authorization: `Bearer ${token}`, dgotp: dgotp, },\n          }\n        );\n\n        const { destinationOptions } = response.data;\n        setDestinationOptions(destinationOptions);\n\n      } catch (err) {\n        console.error('Error Response:', err.response?.data);\n        setError(\n          err.response?.data?.message || 'An error occurred. Please check your credentials and try again.'\n        );\n      }\n    }\n\n    destinationSearch();\n  }, [userData?.token, bookingData.appointmentType, bookingData.searchQuery]);\n\n  const fetchUpdatedData = async () => {\n    try {\n      const updatedUserData = await Updater();\n      if (updatedUserData) {\n        setUserData(updatedUserData);\n        setAppointments(updatedUserData.appointments || []);\n      } else {\n        const userDataString = await AsyncStorage.getItem('userData');\n        const parsedData = userDataString ? JSON.parse(userDataString) : {};\n        setUserData(parsedData);\n        setAppointments(parsedData.appointments || []);\n      }\n    } catch (error) {\n      console.error('Error fetching updated data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUpdatedData();\n  }, [refreshing]);\n\n  const onRefresh = useCallback(() => {\n    fetchUpdatedData();\n  }, []);\n\n\n\n\n  const showQRCode = (refID) => {\n    setSelectedRefID(refID);\n    setVisible(true);\n  };\n\n\n  const handleCancelAppointment2 = async (appointment) => {\n    const token = await AsyncStorage.getItem('userToken');\n    if (!token) {\n      Alert.alert('Error', 'User not authenticated.');\n      return;\n    }\n  \n    if (!userData?.ppn) {\n      Alert.alert('Error', 'No dependant selected.');\n      return;\n    }\n  \n    if (!cancellationReason) {\n      Alert.alert('Error', 'Please provide a cancellation reason.');\n      return;\n    }\n  \n    // Just show confirmation and handle the rest inside 'onPress'\n    Alert.alert(\n      'Confirm Cancellation',\n      'Appointment cancellation is irreversible. Do you want to proceed?',\n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancellation aborted'),\n          style: 'cancel',\n        },\n        {\n          text: 'Confirm',\n          onPress: async () => {\n            try {\n              const freshToken = await AsyncStorage.getItem('userToken');\n              if (!freshToken) {\n                Alert.alert('Error', 'User not authenticated.');\n                return;\n              }\n  \n              const dgotp = await TOTPGenerator();\n  \n              const response = await api.post(\n                '/cancel_appointment',\n                {\n                  ppn: userData.ppn,\n                  sku: appointment.sku,\n                  ticketID: appointment.ticketID,\n                  cancellationReason: cancellationReason,\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${freshToken}`,\n                    dgotp: dgotp,\n                  },\n                }\n              );\n  \n              const { message } = response.data;\n              Alert.alert('Message', message);\n              fetchUpdatedData();\n              setShowBookingForm(false);\n            } catch (error) {\n              console.error('Error canceling appointment:', error);\n              Alert.alert(\n                'Error',\n                error.response?.data?.message ||\n                  error.message ||\n                  'An unexpected error occurred.'\n              );\n            }\n          },\n        },\n      ],\n      { cancelable: false }\n    );\n  };\n\n\n  //This is the version compatible with web build, as Alert does not work in webbuild\n  const handleCancelAppointment = async (appointment) => {\n    const token = await AsyncStorage.getItem('userToken');\n    if (!token) {\n      window.alert('Error', 'User not authenticated.');\n      return;\n    }\n  \n    if (!userData?.ppn) {\n      window.alert('Error', 'No dependant selected.');\n      return;\n    }\n  \n    if (!cancellationReason) {\n      window.alert('Error', 'Please provide a cancellation reason.');\n      return;\n    }\n  \n    const confirmed = window.confirm('Do you want to cancel the appointment?');\n    if (!confirmed) {\n      console.log('Operation aborted');\n      return;\n    }\n  \n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        window.alert('User not authenticated.');\n        return;\n      }\n  \n      let dgotp = '123456'; // Temporary test value — replace if TOTPGenerator works on web\n  \n      // If TOTPGenerator works in web, use it:\n      try {\n        dgotp = await TOTPGenerator();\n      } catch (e) {\n        console.warn('TOTPGenerator failed in web build:', e);\n      }\n  \n      const response = await api.post(\n        '/cancel_appointment',\n        {\n          ppn: userData.ppn,\n          sku: appointment.sku,\n          ticketID: appointment.ticketID,\n          cancellationReason: cancellationReason,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            dgotp: dgotp,\n          },\n        }\n      );\n  \n      const { message } = response.data;\n      window.alert(`Success: ${message}`);\n      //setDestinationOptions([]);\n      //setShowBookingForm(false);\n      fetchUpdatedData();\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n      if (error.response?.data?.message) {\n        window.alert(error.response.data.message);\n      } else {\n        window.alert('An unexpected error occurred.');\n      }\n    }\n  };\n  \n\n\n  \n//This is the main function and it's the right one for mobile aps\n  const handleBookAppointment2 = async () => {\n    const { ppn, appointmentType, destinationID, localBranchID, localConfigID } = bookingData;\n  \n    if (!appointmentType || !destinationID || !localBranchID || !localConfigID) {\n      Alert.alert('Error', 'All fields are required to book an appointment.');\n      return;\n    }\n  \n    if (!ppn) {\n      Alert.alert('Error', 'No patient selected.');\n      return;\n    }\n  \n    // Use Alert for confirmation (as React Native doesn't have confirm)\n    Alert.alert(\n      'Confirm Submission',\n      'Do you want to submit the appointment request?',\n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Submission cancelled'),\n          style: 'cancel',\n        },\n        {\n          text: 'Confirm',\n          onPress: async () => {\n            try {\n              const token = await AsyncStorage.getItem('userToken');\n              if (!token) {\n                Alert.alert('Error', 'User not authenticated.');\n                return;\n              }\n  \n              const dgotp = await TOTPGenerator(); // Ensure you're generating or retrieving dgotp\n  \n              const response = await api.post(\n                '/book_appointment',\n                {\n                  ppn: ppn,\n                  appointmentType: appointmentType,\n                  destinationID: destinationID,\n                  localBranchID: localBranchID,\n                  localConfigID: localConfigID,\n                },\n                {\n                  headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n                }\n              );\n  \n              const {message} = await response.data;\n                Alert.alert('Success', message); // Assuming the API responds with a message\n                setDestinationOptions([]);\n                setShowBookingForm(false); // Hide the booking form\n                fetchUpdatedData(); // Refresh appointments\n            } catch (error) {\n              console.error('Error booking appointment:', error);\n            \n              if (error.response && error.response.data && error.response.data.message) {\n                Alert.alert('Error', error.response.data.message);\n              } else {\n                Alert.alert('Error', 'An unexpected error occurred.');\n              }\n            }\n          },\n        },\n      ],\n      { cancelable: false } // Prevent closing by tapping outside\n    );\n  };\n\n\n  //This is the version compatible with web build, as Alert does not work in webbuild\n  const handleBookAppointment = async () => {\n    const { ppn, appointmentType, destinationID, localBranchID, localConfigID } = bookingData;\n  \n    if (!appointmentType || !destinationID || !localBranchID || !localConfigID) {\n      window.alert('All fields are required to book an appointment.');\n      return;\n    }\n  \n    if (!ppn) {\n      window.alert('No patient selected.');\n      return;\n    }\n  \n    const confirmed = window.confirm('Do you want to submit the appointment request?');\n    if (!confirmed) {\n      console.log('Submission cancelled');\n      return;\n    }\n  \n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        window.alert('User not authenticated.');\n        return;\n      }\n  \n      let dgotp = '123456'; // Temporary test value — replace if TOTPGenerator works on web\n  \n      // If TOTPGenerator works in web, use it:\n      try {\n        dgotp = await TOTPGenerator();\n      } catch (e) {\n        console.warn('TOTPGenerator failed in web build:', e);\n      }\n  \n      const response = await api.post(\n        '/book_appointment',\n        {\n          ppn,\n          appointmentType,\n          destinationID,\n          localBranchID,\n          localConfigID,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            dgotp: dgotp,\n          },\n        }\n      );\n  \n      const { message } = response.data;\n      window.alert(`Success: ${message}`);\n      setDestinationOptions([]);\n      setShowBookingForm(false);\n      fetchUpdatedData();\n    } catch (error) {\n      console.error('Error booking appointment:', error);\n      if (error.response?.data?.message) {\n        window.alert(error.response.data.message);\n      } else {\n        window.alert('An unexpected error occurred.');\n      }\n    }\n  };\n  \n  \n\n  const renderAppointment = ({ item }) => (\n    <View style={styles.appointmentRow}>\n      <View style={styles.appointmentInfo}>\n        <Text style={styles.infoText}>Appointment: {item.nonproprietaryName.toUpperCase()}</Text>\n        <Text style={styles.infoText}>Location: {item.location}</Text>\n        <Text style={styles.infoText}>Status: {item.appointmentStatus}</Text>\n        <Text style={styles.infoText}>Service Pin: {item.servicePin}</Text>\n      </View>\n      <View>\n        <Button\n          title=\"Cancel\"\n          color=\"#ff4444\"\n          onPress={() => handleCancelAppointment(item)}\n        />\n        <Button\n          title=\"QR Code\"\n          color=\"#4CAF50\"\n          onPress={() => showQRCode(item.referenceID)}\n        />\n        <QRCodeOverlay\n        visible={visible}\n        qrValue={selectedRefID}\n        onClose={() => setVisible(false)}\n      />\n      </View>\n    </View>\n  );\n\n  return (\n    <View style={styles.container}>\n      {!showBookingForm && (\n        <View>\n          <View style={styles.appointmentDisplay}>\n            <FlatList\n              data={appointments}\n              keyExtractor={(item) => item?.ticketID.toString()}\n              renderItem={renderAppointment}\n              ListEmptyComponent={<Text style={styles.emptyText}>No appointments found.</Text>}\n              refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n            />\n          </View>\n\n          <Button\n            title=\"Book New Appointment\"\n            onPress={() => setShowBookingForm(true)}\n            color=\"#008080\"\n          />\n        </View>\n      )}\n\n      {showBookingForm && (\n        <View style={styles.bookingForm}>\n          <Text style={styles.formTitle}>Book a New Appointment</Text>\n\n\n          {/* Dropdown for Appointment Type Selection */}\n          <View style={styles.pickerContainer}>\n            <Picker\n              selectedValue={bookingData.appointmentType}\n              onValueChange={(value) => setBookingData({ ...bookingData, appointmentType: value })}\n              style={styles.picker}\n            >\n              <Picker.Item label=\"Select Appointment Type\" value=\"\" />\n              {appointmentTypes.map((type) => (\n                <Picker.Item key={type.value} label={type.label} value={type.nonproprietaryName} />\n              ))}\n            </Picker>\n          </View>\n\n\n          {/* Dropdown for Destination Selection */}\n          <View style={styles.pickerContainer}>\n            <Picker\n              selectedValue={bookingData.localConfigID || ''} // Ensure localConfigID is used as selectedValue\n              onValueChange={(value) => {\n                // Find the selected destination object based on the selected localConfigID\n                const selectedDestination = destinationOptions.find(\n                  (destination) => destination.localConfigID === value\n                );\n\n                if (selectedDestination) {\n                  // If a destination is found, update bookingData with all relevant information\n                  setBookingData({\n                    ...bookingData,\n                    localConfigID: selectedDestination.localConfigID,\n                    localBranchID: selectedDestination.localBranchID,\n                    destinationID: selectedDestination.destinationID,\n                  });\n                } else {\n                  // If no destination is found, reset values to empty\n                  setBookingData({\n                    ...bookingData,\n                    localConfigID: '',\n                    localBranchID: '',\n                    destinationID: '',\n                  });\n                }\n              }}\n              style={styles.picker}\n            >\n              <Picker.Item label=\"Select Destination\" value=\"\" />\n              {destinationOptions.map((destination, index) => (\n                <Picker.Item\n                  key={index}\n                  label={destination.destination} // Use destination name as label\n                  value={destination.localConfigID} // Use localConfigID as the value\n                />\n              ))}\n            </Picker>\n          </View>\n\n\n\n          {/* Search field to narrow down search to state, city, or even a particular hospital */}\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search destination...\"\n            value={bookingData.searchQuery}\n            onChangeText={(text) => setBookingData({ ...bookingData, searchQuery: text })}\n          />\n\n        \n          {/* Dropdown for Patient Selection ...first option is the user, and the subsequent options are the dependants*/}\n          <View style={styles.pickerContainer}>\n            <Picker\n              selectedValue={bookingData.ppn}\n              onValueChange={(value) => setBookingData({ ...bookingData, ppn: value })}\n              style={styles.picker}\n            >\n              <Picker.Item label=\"Select a patient\" value=\"\" />\n              <Picker.Item label={userData.user} value={userData.ppn} />\n              {userData?.dependants.map((patient) => (\n                <Picker.Item key={patient.value} label={patient.user} value={patient.ppn} />\n              ))}\n            </Picker>\n          </View>\n      \n      \n          <View style={styles.buttonContainer}>\n            <View style={styles.button}>\n              <Button title=\"Book Appointment\" onPress={handleBookAppointment} color=\"#008080\" />\n            </View>\n            <View style={styles.button}>\n              <Button title=\"Cancel\" onPress={() => setShowBookingForm(false)} color=\"#ff4444\" />\n            </View>\n          </View>\n      </View>\n      \n      )}\n    </View>\n  );\n};\n\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n  },\n  pickerContainer: {\n    alignContent: 'center',\n    justifyItems: 'center',\n    justifyContent: 'center',\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginVertical: 10, // minimal space between pickers\n    backgroundColor: '#fff',\n    paddingHorizontal: 10,\n    overflow: 'hidden', // prevent overflow\n  },\n  picker: {\n    //backgroundColor: 'green',\n    height: 80,  // this height should be enough to display the picker correctly\n    width: '100%',\n    marginBottom: 50,\n  },\n  appointmentDisplay: {\n    marginTop: 50,\n  },\n  bookingForm: {\n    backgroundColor: '#fff',\n    padding: 20,\n    marginTop: 20,\n    borderRadius: 10,\n    elevation: 5,\n    flexDirection: 'column', // Ensures pickers are stacked vertically\n    justifyContent: 'space-between',\n    paddingBottom: 20,\n  },\n  formTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center',\n    color: '#333',\n  },\n  input: {\n    height: 45,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 15,\n    paddingHorizontal: 10,\n    backgroundColor: '#f7f7f7',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  button: {\n    width: '48%',\n  },\n  appointmentRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    elevation: 3,\n  },\n  appointmentInfo: {\n    flex: 1,\n  },\n  infoText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#999',\n    textAlign: 'center',\n    marginTop: 20,\n  },\n});\n\n\nconst styles2 = StyleSheet.create({\n  container: {\n    padding: 10,\n    backgroundColor: '#f5f5f5',\n  },\n  pickerContainer: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 8,\n    marginVertical: 12,\n    backgroundColor: '#fff',\n  },\n  picker: {\n    height: 50,\n    width: '100%',\n  },\n  appointmentDisplay: {\n    marginTop: 50,\n  },\n  bookingForm: {\n    backgroundColor: '#fff',\n    padding: 20,\n    marginTop: 20,\n    borderRadius: 10,\n    elevation: 5,\n  },\n  formTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center',\n    color: '#333',\n  },\n  input: {\n    height: 45,\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 8,\n    marginBottom: 15,\n    paddingHorizontal: 10,\n    backgroundColor: '#f7f7f7',\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n  },\n  button: {\n    width: '48%',\n  },\n  appointmentRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    marginBottom: 15,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 8,\n    elevation: 3,\n  },\n  appointmentInfo: {\n    flex: 1,\n  },\n  infoText: {\n    fontSize: 16,\n    color: '#555',\n  },\n  emptyText: {\n    fontSize: 16,\n    color: '#999',\n    textAlign: 'center',\n    marginTop: 20,\n  },\n});\n\nexport default AppointmentsScreen;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  FlatList,\n  Alert,\n  RefreshControl,\n  Platform\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Updater from '../components/Updater';\nimport api from '../services/api';\nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport { saveAs } from 'file-saver'; // Optional: you can also use this if you install it\nimport TOTPGenerator from '../components/TOTPGenerator';\n\nconst CorrespondenceScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState({});\n  const [correspondence, setCorrespondence] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n\n\n  const fetchUpdatedData = async () => {\n    try {\n      const updatedUserData = await Updater();\n      if (updatedUserData) {\n        setUserData(updatedUserData);\n        setCorrespondence(updatedUserData.correspondence || []);\n      } else {\n        const userDataString = await AsyncStorage.getItem('userData');\n        const parsedData = userDataString ? JSON.parse(userDataString) : {};\n        setUserData(parsedData);\n        setCorrespondence(parsedData.correspondence || []);\n      }\n    } catch (error) {\n      console.error('Error in fetching updated data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUpdatedData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    fetchUpdatedData();\n  },[])\n\n  const showAlert = (title, message) => {\n    if (Platform.OS === 'web') {\n      window.alert(`${title}: ${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n\n  const handleDownloadCorrespondence = async (correspondenceReference) => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        showAlert('Error', 'User not authenticated.');\n        return;\n      }\n  \n      const dgotp = await TOTPGenerator();\n  \n      const response = await api.get(\n        `/download_correspondence?correspondenceReference=${correspondenceReference}`,\n        {\n          headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n          responseType: 'arraybuffer',\n        }\n      );\n  \n      if (response.status === 200) {\n        const filename = `Correspondence_${correspondenceReference}.pdf`;\n  \n        if (Platform.OS === 'web') {\n          // Convert arraybuffer to Blob for web\n          const blob = new Blob([response.data], { type: 'application/pdf' });\n  \n          // Create a temporary link to trigger download\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = filename;\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          window.URL.revokeObjectURL(url);\n  \n          showAlert('Success', 'PDF downloaded.');\n        } else {\n          const base64Data = btoa(\n            new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')\n          );\n  \n          const fileUri = FileSystem.documentDirectory + filename;\n          await FileSystem.writeAsStringAsync(fileUri, base64Data, {\n            encoding: FileSystem.EncodingType.Base64,\n          });\n  \n          if (await Sharing.isAvailableAsync()) {\n            await Sharing.shareAsync(fileUri);\n          } else {\n            showAlert('Success', 'PDF downloaded.');\n          }\n        }\n      } else {\n        showAlert('Error', 'Failed to download correspondence letter.');\n      }\n    } catch (error) {\n      console.error('Error during correspondence download:', error);\n      showAlert('Error', 'An unexpected error occurred.');\n    }\n  };\n  \n\n  const handleDownloadCorrespondence3 = async (correspondenceReference) => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        showAlert('Error', 'User not authenticated.');\n        return;\n      }\n  \n      const dgotp = await TOTPGenerator();\n  \n      const response = await api.get(\n        `/download_correspondence?correspondenceReference=${correspondenceReference}`,\n        {\n          headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n          responseType: 'arraybuffer',\n        }\n      );\n  \n      if (response.status === 200) {\n        const base64Data = btoa(\n          new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')\n        );\n  \n        const fileUri = FileSystem.documentDirectory + `Correspondence_${correspondenceReference}.pdf`;\n  \n        await FileSystem.writeAsStringAsync(fileUri, base64Data, {\n          encoding: FileSystem.EncodingType.Base64,\n        });\n  \n        if (await Sharing.isAvailableAsync()) {\n          await Sharing.shareAsync(fileUri);\n        } else {\n          showAlert('Success', 'PDF file has been downloaded successfully!');\n        }\n      } else {\n        showAlert('Error', 'Failed to download correspondence letter.');\n      }\n    } catch (error) {\n      console.error('Error during correspondence download:', error);\n      showAlert('Error', 'An unexpected error occurred.');\n    }\n  };\n  \n\n  //this is the main function.\n  const handleDownloadCorrespondence2 = async (correspondenceReference) => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        Alert.alert('Error', 'User not authenticated.');\n        return;\n      }\n\n      const dgotp = await TOTPGenerator();\n  \n      // Step 1: Fetch binary data from API\n      const response = await api.get(\n        `/download_correspondence?correspondenceReference=${correspondenceReference}`,\n        {\n          headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n          responseType: 'arraybuffer', // Ensure response is in binary format\n        }\n      );\n  \n      if (response.status === 200) {\n        // Step 2: Convert arraybuffer to Base64\n        const base64Data = btoa(\n          new Uint8Array(response.data)\n            .reduce((data, byte) => data + String.fromCharCode(byte), '')\n        );\n  \n        const fileUri = FileSystem.documentDirectory + `Correspondence_${correspondenceReference}.pdf`;\n  \n        // Step 3: Write the Base64 data to a local file\n        await FileSystem.writeAsStringAsync(fileUri, base64Data, {\n          encoding: FileSystem.EncodingType.Base64,\n        });\n  \n        // Step 4: Share or open the file\n        if (await Sharing.isAvailableAsync()) {\n          await Sharing.shareAsync(fileUri);\n        } else {\n          Alert.alert('Success', 'PDF file has been downloaded successfully!');\n        }\n      } else {\n        Alert.alert('Error', 'Failed to download correspondence letter.');\n      }\n    } catch (error) {\n      console.error('Error during correspondence download:', error);\n      Alert.alert('Error', 'An unexpected error occurred.');\n    }\n  };\n  \n\n  const renderCorrespondence = ({ item }) => (\n    <View style={styles.prescriptionRow}>\n      <View style={styles.prescriptionInfo}>\n        <Text style={styles.infoText}>Title: {item.noteTitle}</Text>\n        <Text style={styles.infoText}>Source: {item.source}</Text>\n        <Text style={styles.infoText}>Issued On: {item.issuedOn}</Text>\n      </View>\n      <Button\n        title=\"Download\"\n        color=\"#008080\"\n        onPress={() => handleDownloadCorrespondence(item.correspondenceReference)}\n      />\n    </View>\n  );\n\n\n  return (\n    <View style={styles.container}>\n        <FlatList\n          data={correspondence}\n          keyExtractor={(item, index) => index.toString()} // Use reference as key\n          renderItem={renderCorrespondence}\n          ListEmptyComponent={<Text style={styles.emptyText}>No correspondence found.</Text>}\n          refreshControl={ // trigger the function to fetch patient's updated data whever screen is dragged down\n            <RefreshControl\n              refreshing={refreshing} // Determines if the refresh indicator is visible\n              onRefresh={onRefresh}  // Callback function triggered when pulled down\n            />\n          }\n        />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    marginTop: 50,\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9',\n  },\n  prescriptionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  prescriptionInfo: {\n    flex: 1,\n    marginRight: 10,\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#333',\n  },\n  pharmacyRow: {\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 10,\n  },\n  emptyText: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#999',\n    marginTop: 20,\n  },\n  logoutButton: {\n    marginTop: 20,\n  },\n});\n\nexport default CorrespondenceScreen;\n","import React, { useEffect, useState, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Button,\n  StyleSheet,\n  FlatList,\n  ScrollView,\n  Image,\n  Alert,\n  TouchableOpacity,\n  RefreshControl,\n  Platform\n} from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport Updater from '../components/Updater';\nimport api from '../services/api';\nimport * as Location from 'expo-location'; \nimport * as FileSystem from 'expo-file-system';\nimport * as Sharing from 'expo-sharing';\nimport TOTPGenerator from '../components/TOTPGenerator';\nimport QRCodeOverlay from '../services/qrcodeOverlay';\n\nconst DependantsScreen = ({ navigation }) => {\n  const [userData, setUserData] = useState({});\n  const [CurrentPage, setCurrentPage] = useState('dependantsList');\n  const [subPage, setSubPage] = useState('prescriptions');   //For toggling between dependant's prescriptions list and nearest locations of dependant's prescription items\n  const [dependants, setPrescriptions] = useState([]);\n  const [refreshing, setRefreshing] = useState(false);\n  const [selectedDependant, setSelectedDependant] = useState(null);\n  const [pharmacies, setPharmacies] = useState([]);\n  const [cancellationReason, setCancellationReason] = useState(`Cancelled by watcher: ${userData.user}`);\n  const [showDependants, setShowPharmacies] = useState(false);\n\n  //Displaying qr code for dependants\n  const [visible, setVisible] = useState(false);\n  const [selectedRefID, setSelectedRefID] = useState('');\n  const showQRCode = (refID) => {\n    setSelectedRefID(refID);\n    setVisible(true);\n  };\n\n  const fetchUpdatedData = async () => {\n    try {\n      const updatedUserData = await Updater();\n      if (updatedUserData) {\n        setUserData(updatedUserData);\n        setPrescriptions(updatedUserData.dependants || []);\n        const updatedDep = dependants.find(dep => dep.ppn === selectedDependant?.ppn);\n        if (updatedDep) {\n          setSelectedDependant(updatedDep);\n        }\n      } else {\n        const userDataString = await AsyncStorage.getItem('userData');\n        const parsedData = userDataString ? JSON.parse(userDataString) : {};\n        setUserData(parsedData);\n        setPrescriptions(parsedData.dependants || []);\n      }\n    } catch (error) {\n      console.error('Error in fetching updated data:', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchUpdatedData();\n  }, []);\n\n  const onRefresh = useCallback(() => {\n    fetchUpdatedData();\n  },[])\n\n\n  const handleSelectedDependant = async (item) => {\n    setSelectedDependant(item);\n    setCurrentPage('dependant');\n  };\n  \n\n  const renderDependants = ({ item }) => (\n    <View style={styles.prescriptionRow}>\n      <View style={styles.prescriptionInfo}>\n        <Text style={styles.infoText}>Dependant: {item.user}</Text>\n        <Text style={styles.infoText}>PPN: {item.ppn}</Text>\n        <Text style={styles.infoText}>DOB: {item.dob} ({item.age})</Text>\n        </View>\n        <Button\n        title=\"Open\"\n        color=\"#008080\"\n        onPress={() => handleSelectedDependant(item)}\n      />  \n    </View>\n  );\n\n\n  //Pharmacy functions\n  const locatePrescriptionItem = async (sku) => {\n    try {\n      // Request location permissions\n      const { status } = await Location.requestForegroundPermissionsAsync();\n      if (status !== 'granted') {\n        Alert.alert('Permission Denied', 'Location access is required.');\n        return;\n      }\n  \n      // Get the user's current location\n      const location = await Location.getCurrentPositionAsync({});\n      if (!location || !location.coords) {\n        Alert.alert('Location Error', 'Unable to fetch location.');\n        return;\n      }\n  \n      // Get the user token\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        Alert.alert('Error', 'User not authenticated.');\n        return;\n      }\n\n      const dgotp = await TOTPGenerator();\n  \n      // Send request to the API with the sku and location\n      const response = await api.get(\n        `/locate_prescription_item?sku=${sku}&latitude=${location.coords.latitude}&longitude=${location.coords.longitude}`,\n        {\n          headers: { \n            Authorization: `Bearer ${token}`,\n            dgotp: dgotp,\n         },\n        }\n      );\n  \n      if (response.status === 200) {\n        // Set pharmacies list and show them\n        setPharmacies(response.data.pharmacies || []);\n        setShowPharmacies(true);\n      } else {\n        Alert.alert('Error', 'Failed to fetch pharmacies.');\n      }\n    } catch (error) {\n      console.error('Error locating prescription:', error);\n      Alert.alert('Error', 'An unexpected error occurred.');\n    }\n  };\n\n  const renderPrescription = ({ item }) => (\n    <View style={styles.prescriptionRow}>\n      <View style={styles.prescriptionInfo}>\n        <Text style={styles.infoText}>Prescription: {item.prescription}</Text>\n        <Text style={styles.infoText}>Source: {item.source}</Text>\n        <Text style={styles.infoText}>Date: {item.date}</Text>\n        <Text style={styles.infoText}>Status: {item.status}</Text>\n        <Text style={styles.infoText}>Service Pin: {item.servicePin}</Text>\n      </View>\n      <Button\n        title=\"Locate Item\"\n        color=\"#008080\"\n        onPress={() => {locatePrescriptionItem(item.sku); setSubPage('itemLocation');}}\n      />\n    </View>\n  );\n\n  const renderPharmacy = ({ item }) => (\n    <View style={styles.pharmacyRow}>\n      <Text style={styles.infoText}>Pharmacy: {item.pharmacy}</Text>\n      <Text style={styles.infoText}>Brand: {item.proprietaryName}</Text>\n      <Text style={styles.infoText}>Unit Price: {item.unitPrice}</Text>\n      <Text style={styles.infoText}>Location: {item.address}</Text>\n      <Text style={styles.infoText}>Distance: {item.distance}</Text>\n    </View>\n  );\n\n\n  //CORRESPONDENCE\n  const renderCorrespondence = ({ item }) => (\n    <View style={styles.prescriptionRow}>\n      <View style={styles.prescriptionInfo}>\n        <Text style={styles.infoText}>Title: {item.noteTitle}</Text>\n        <Text style={styles.infoText}>Source: {item.source}</Text>\n        <Text style={styles.infoText}>Issued On: {item.issuedOn}</Text>\n      </View>\n      <Button\n        title=\"Download\"\n        color=\"#008080\"\n        onPress={() => handleDownloadCorrespondence(item.correspondenceReference)}\n      />\n    </View>\n  );\n\n\n  const showAlert = (title, message) => {\n    if (Platform.OS === 'web') {\n      window.alert(`${title}: ${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n\n  const handleDownloadCorrespondence = async (correspondenceReference) => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        showAlert('Error', 'User not authenticated.');\n        return;\n      }\n  \n      const dgotp = await TOTPGenerator();\n  \n      const response = await api.get(\n        `/download_correspondence?correspondenceReference=${correspondenceReference}`,\n        {\n          headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n          responseType: 'arraybuffer',\n        }\n      );\n  \n      if (response.status === 200) {\n        const filename = `Correspondence_${correspondenceReference}.pdf`;\n  \n        if (Platform.OS === 'web') {\n          // Convert arraybuffer to Blob for web\n          const blob = new Blob([response.data], { type: 'application/pdf' });\n  \n          // Create a temporary link to trigger download\n          const url = window.URL.createObjectURL(blob);\n          const a = document.createElement('a');\n          a.href = url;\n          a.download = filename;\n          document.body.appendChild(a);\n          a.click();\n          a.remove();\n          window.URL.revokeObjectURL(url);\n  \n          showAlert('Success', 'PDF downloaded.');\n        } else {\n          const base64Data = btoa(\n            new Uint8Array(response.data).reduce((data, byte) => data + String.fromCharCode(byte), '')\n          );\n  \n          const fileUri = FileSystem.documentDirectory + filename;\n          await FileSystem.writeAsStringAsync(fileUri, base64Data, {\n            encoding: FileSystem.EncodingType.Base64,\n          });\n  \n          if (await Sharing.isAvailableAsync()) {\n            await Sharing.shareAsync(fileUri);\n          } else {\n            showAlert('Success', 'PDF downloaded.');\n          }\n        }\n      } else {\n        showAlert('Error', 'Failed to download correspondence letter.');\n      }\n    } catch (error) {\n      console.error('Error during correspondence download:', error);\n      showAlert('Error', 'An unexpected error occurred.');\n    }\n  };\n\n  const handleDownloadCorrespondence2 = async (correspondenceReference) => {\n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        Alert.alert('Error', 'User not authenticated.');\n        return;\n      }\n\n      const dgotp = await TOTPGenerator();\n  \n      // Step 1: Fetch binary data from API\n      const response = await api.get(\n        `/download_correspondence?correspondenceReference=${correspondenceReference}`,\n        {\n          headers: { Authorization: `Bearer ${token}`, dgotp: dgotp },\n          responseType: 'arraybuffer', // Ensure response is in binary format\n        }\n      );\n  \n      if (response.status === 200) {\n        // Step 2: Convert arraybuffer to Base64\n        const base64Data = btoa(\n          new Uint8Array(response.data)\n            .reduce((data, byte) => data + String.fromCharCode(byte), '')\n        );\n  \n        const fileUri = FileSystem.documentDirectory + `Correspondence_${correspondenceReference}.pdf`;\n  \n        // Step 3: Write the Base64 data to a local file\n        await FileSystem.writeAsStringAsync(fileUri, base64Data, {\n          encoding: FileSystem.EncodingType.Base64,\n        });\n  \n        // Step 4: Share or open the file\n        if (await Sharing.isAvailableAsync()) {\n          await Sharing.shareAsync(fileUri);\n        } else {\n          Alert.alert('Success', 'PDF file has been downloaded successfully!');\n        }\n      } else {\n        Alert.alert('Error', 'Failed to download correspondence letter.');\n      }\n    } catch (error) {\n      console.error('Error during correspondence download:', error);\n      Alert.alert('Error', 'An unexpected error occurred.');\n    }\n  };\n\n\n\n  //APPOINTMENTS\n\n  const handleCancelAppointment2 = async (appointment) => {\n    const token = await AsyncStorage.getItem('userToken');\n    if (!token) {\n      Alert.alert('Error', 'User not authenticated.');\n      return;\n    }\n  \n    if (!selectedDependant?.ppn) {\n      Alert.alert('Error', 'No dependant selected.');\n      return;\n    }\n  \n    if (!cancellationReason) {\n      Alert.alert('Error', 'Please provide a cancellation reason.');\n      return;\n    }\n  \n    // Just show confirmation and handle the rest inside 'onPress'\n    Alert.alert(\n      'Confirm Cancellation',\n      'Appointment cancellation is irreversible. Do you want to proceed?',\n      [\n        {\n          text: 'Cancel',\n          onPress: () => console.log('Cancellation aborted'),\n          style: 'cancel',\n        },\n        {\n          text: 'Confirm',\n          onPress: async () => {\n            try {\n              const freshToken = await AsyncStorage.getItem('userToken');\n              if (!freshToken) {\n                Alert.alert('Error', 'User not authenticated.');\n                return;\n              }\n  \n              const dgotp = await TOTPGenerator();\n  \n              const response = await api.post(\n                '/cancel_appointment',\n                {\n                  ppn: selectedDependant.ppn,\n                  sku: appointment.sku,\n                  ticketID: appointment.ticketID,\n                  cancellationReason: cancellationReason,\n                },\n                {\n                  headers: {\n                    Authorization: `Bearer ${freshToken}`,\n                    dgotp: dgotp,\n                  },\n                }\n              );\n  \n              const { message } = response.data;\n              Alert.alert('Message', message);\n              fetchUpdatedData();\n              //setShowBookingForm(false);\n            } catch (error) {\n              console.error('Error canceling appointment:', error);\n              Alert.alert(\n                'Error',\n                error.response?.data?.message ||\n                  error.message ||\n                  'An unexpected error occurred.'\n              );\n            }\n          },\n        },\n      ],\n      { cancelable: false }\n    );\n  };\n\n\n\n  //This is the version compatible with web build, as Alert does not work in webbuild\n  const handleCancelAppointment = async (appointment) => {\n    const token = await AsyncStorage.getItem('userToken');\n    if (!token) {\n      window.alert('Error', 'User not authenticated.');\n      return;\n    }\n  \n    if (!userData?.ppn) {\n      window.alert('Error', 'No dependant selected.');\n      return;\n    }\n  \n    if (!cancellationReason) {\n      window.alert('Error', 'Please provide a cancellation reason.');\n      return;\n    }\n  \n    const confirmed = window.confirm('Do you want to cancel the appointment?');\n    if (!confirmed) {\n      console.log('Operation aborted');\n      return;\n    }\n  \n    try {\n      const token = await AsyncStorage.getItem('userToken');\n      if (!token) {\n        window.alert('User not authenticated.');\n        return;\n      }\n  \n      let dgotp = '123456'; // Temporary test value — replace if TOTPGenerator works on web\n  \n      // If TOTPGenerator works in web, use it:\n      try {\n        dgotp = await TOTPGenerator();\n      } catch (e) {\n        console.warn('TOTPGenerator failed in web build:', e);\n      }\n  \n      const response = await api.post(\n        '/cancel_appointment',\n        {\n          ppn: userData.ppn,\n          sku: appointment.sku,\n          ticketID: appointment.ticketID,\n          cancellationReason: cancellationReason,\n        },\n        {\n          headers: {\n            Authorization: `Bearer ${token}`,\n            dgotp: dgotp,\n          },\n        }\n      );\n  \n      const { message } = response.data;\n      window.alert(`Success: ${message}`);\n      //setDestinationOptions([]);\n      //setShowBookingForm(false);\n      fetchUpdatedData();\n    } catch (error) {\n      console.error('Error cancelling appointment:', error);\n      if (error.response?.data?.message) {\n        window.alert(error.response.data.message);\n      } else {\n        window.alert('An unexpected error occurred.');\n      }\n    }\n  };\n  \n\n\n  const renderAppointment = ({ item }) => (\n    <View style={styles.appointmentRow}>\n      <View style={styles.appointmentInfo}>\n        <Text style={styles.infoText}>Appointment: {item.nonproprietaryName.toUpperCase()}</Text>\n        <Text style={styles.infoText}>Location: {item.location}</Text>\n        <Text style={styles.infoText}>Status: {item.appointmentStatus}</Text>\n        <Text style={styles.infoText}>Service Pin: {item.servicePin}</Text>\n      </View>\n      <View>\n        <Button\n          title=\"Cancel\"\n          color=\"#ff4444\"\n          onPress={() => handleCancelAppointment(item)}\n        />\n        <Button\n          title=\"QR Code\"\n          color=\"#4CAF50\"\n          onPress={() => showQRCode(item.referenceID)}\n        />\n        <QRCodeOverlay\n        visible={visible}\n        qrValue={selectedRefID}\n        onClose={() => setVisible(false)}\n      />\n      </View>\n    </View>\n  );\n\n\n  return (\n    <View style={styles.page}>\n      {CurrentPage=='dependantsList' && \n      <View style={styles.container}>\n          <FlatList\n            data={dependants}\n            keyExtractor={(item, index) => index.toString()} // Use sku\n            renderItem={renderDependants}\n            ListEmptyComponent={<Text style={styles.emptyText}>No dependants found.</Text>}\n            refreshControl={ // trigger the function to fetch patient's updated data whever screen is dragged down\n              <RefreshControl\n                refreshing={refreshing} // Determines if the refresh indicator is visible\n                onRefresh={onRefresh}  // Callback function triggered when pulled down\n              />\n            }\n          />\n          \n      </View>\n      }\n\n      {CurrentPage=='dependant' && \n      <ScrollView \n        style={styles.container}\n        refreshControl={\n          <RefreshControl refreshing={refreshing} onRefresh={onRefresh} />\n        }\n      >\n        <View style={styles.profileHeader}>\n          {userData?.photoUrl ? (\n            <Image source={{ uri: selectedDependant.photoUrl }} style={styles.profileImage} />\n          ) : (\n            <View style={styles.placeholderImage}>\n              <Text style={styles.placeholderText}>No Image</Text>\n            </View>\n          )}\n          <Text style={styles.userName}>{selectedDependant?.user || 'Guest'}</Text>\n        </View>\n        \n        <View style={styles.profileDetails}>\n          <Text style={styles.detailText}>\n            <Text style={styles.bold}>PPN: </Text>{selectedDependant?.ppn || 'Not found'}\n          </Text>\n          <Text style={styles.detailText}>\n            <Text style={styles.bold}>Gender: </Text>{selectedDependant?.gender || 'Not found'} ({selectedDependant?.age}yrs)\n          </Text>\n          <Text style={styles.detailText}>\n            <Text style={styles.bold}>DOB: </Text>{selectedDependant?.dob || 'Not found'} ({selectedDependant?.age}yrs)\n          </Text>\n          <Text style={styles.detailText}>\n            <Text style={styles.bold}>Address: </Text>{selectedDependant?.address || 'Not found'}\n          </Text>\n          <Text style={styles.detailText}>\n            <Text style={styles.bold}>Credit: </Text>₦{selectedDependant?.credit || 0.00}\n          </Text>\n        </View>\n\n\n        <View style={styles.profileDetails}>\n          <Text style={styles.sectionTitle}>Sponsors/HMO:  </Text>\n            {selectedDependant?.policies?.length > 0 ? (\n            selectedDependant.policies.map((policy, index) => (\n              <View key={index} style={styles.policyRow}>\n                <Text style={styles.policyName}>{policy.sponsor.toUpperCase()}</Text>\n                <Text style={styles.policyId}>Plan: {policy.plan}({policy.policyNumber})</Text>\n                <Text style={styles.policyId}>Contact: {policy.contact}</Text>\n              </View>\n            ))\n          ) : (\n            <Text style={styles.noSponsorText}>No sponsor info available</Text>\n          )}\n        </View>\n\n\n        <View style={styles.profileDetails}>\n          <Text style={styles.sectionTitle}>Prescriptions</Text>\n          {subPage==='prescriptions' &&\n          <FlatList\n            data={selectedDependant?.prescriptions}\n            keyExtractor={(item, index) => index.toString()} // Use sku\n            renderItem={renderPrescription}\n            ListEmptyComponent={<Text style={styles.emptyText}>No prescriptions found.</Text>}\n            refreshControl={ // This is where RefreshControl is used\n              <RefreshControl\n                refreshing={refreshing} // Determines if the refresh indicator is visible\n                onRefresh={onRefresh}  // Callback function triggered when pulled down\n              />\n            }\n          />\n          }\n\n          {subPage==='itemLocation' &&\n          <View>\n          <FlatList\n            data={pharmacies}\n            keyExtractor={(item, index) => index.toString()} // Use sku\n            renderItem={renderPharmacy}\n            ListEmptyComponent={<Text style={styles.emptyText}>No prescriptions found.</Text>}\n            refreshControl={ // This is where RefreshControl is used\n              <RefreshControl\n                refreshing={refreshing} // Determines if the refresh indicator is visible\n                onRefresh={onRefresh}  // Callback function triggered when pulled down\n              />\n            }\n          />\n          <Button\n            title=\"Back to prescriptions\"\n            color=\"#ff4444\"\n            onPress={() => {setSubPage('prescriptions'); setPharmacies([]);}}\n          />\n          </View>\n          }\n        </View>\n\n\n        <View style={styles.profileDetails}>\n          <Text style={styles.sectionTitle}>Appointments</Text>\n          <FlatList\n              data={selectedDependant?.appointments}\n              keyExtractor={(item) => item?.ticketID.toString()}\n              renderItem={renderAppointment}\n              ListEmptyComponent={<Text style={styles.emptyText}>No appointments found.</Text>}\n              refreshControl={<RefreshControl refreshing={refreshing} onRefresh={onRefresh} />}\n            />\n        </View>\n\n        <View style={styles.profileDetails}>\n          <Text style={styles.sectionTitle}>Correspondence</Text>\n          <FlatList\n            data={selectedDependant?.correspondence}\n            keyExtractor={(item, index) => index.toString()} // Use reference as key\n            renderItem={renderCorrespondence}\n            ListEmptyComponent={<Text style={styles.emptyText}>No correspondence found.</Text>}\n            refreshControl={ // trigger the function to fetch patient's updated data whever screen is dragged down\n              <RefreshControl\n                refreshing={refreshing} // Determines if the refresh indicator is visible\n                onRefresh={onRefresh}  // Callback function triggered when pulled down\n              />\n            }\n          />\n        </View>\n\n\n        \n        <View style={styles.logoutContainer}>\n          <Button title=\"Close\" onPress={() => {setSelectedDependant({}); setCurrentPage('dependantsList');}} color=\"#FF6F00\" />\n        </View>\n      </ScrollView>\n      }\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  page: {\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9',\n  },\n  container: {\n    marginTop: 50,\n    flex: 1,\n    padding: 20,\n    backgroundColor: '#f9f9f9',\n  },\n  prescriptionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  prescriptionInfo: {\n    flex: 1,\n    marginRight: 10,\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#333',\n  },\n  pharmacyRow: {\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  sectionTitle: {\n    fontSize: 18,\n    fontWeight: 'bold',\n    marginVertical: 10,\n  },\n  emptyText: {\n    textAlign: 'center',\n    fontSize: 16,\n    color: '#999',\n    marginTop: 20,\n  },\n  logoutButton: {\n    marginTop: 20,\n  },\n\n\n  //DEPENDANT PROFILE PAGE STYLING\n  profileHeader: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500',\n    borderBottomLeftRadius: 20,\n    borderBottomRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 5 },\n    shadowOpacity: 0.3,\n    shadowRadius: 10,\n    elevation: 8,\n    marginBottom: 20, // Increased bottom margin to separate the header from the details\n    //height: '30%', // Set height to 50% of the screen height\n    justifyContent: 'center', // Vertically center the image\n  },\n  profileImage: {\n    width: 250, // Reduced size to maintain proportion\n    height: 250, // Adjusted for better fit\n    borderRadius: 90, // Make the image circular\n    borderWidth: 3,\n    borderColor: '#fff',\n    marginBottom: 10,\n    resizeMode: 'cover',\n  },\n  placeholderImage: {\n    width: 180, // Reduced size to maintain proportion\n    height: 180, // Adjusted for better fit\n    borderRadius: 90, // Make the placeholder circular\n    backgroundColor: '#ccc',\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginBottom: 10,\n  },\n  placeholderText: {\n    color: '#fff',\n    fontWeight: 'bold',\n  },\n  userName: {\n    fontSize: 22,\n    fontWeight: 'bold',\n    color: '#fff',\n    marginTop: 10,\n  },\n  profileDetails: {\n    padding: 20,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 20,\n    borderTopRightRadius: 20,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: -2 },\n    shadowOpacity: 0.1,\n    shadowRadius: 6,\n    elevation: 4,\n    marginBottom: 20, // Added margin bottom to create space between the details and logout button\n    flex: 1, // Added flex to allow space distribution\n  },\n  detailText: {\n    fontSize: 16,\n    color: '#555',\n    marginBottom: 15, // Added more bottom margin for better spacing between details\n  },\n  sectionTitle: {\n    fontSize: 20,\n    fontWeight: 'bold',\n    marginBottom: 15,\n    textAlign: 'center',\n    color: '#333',\n  },\n  bold: {\n    fontWeight: 'bold',\n  },\n  logoutContainer: {\n    marginTop: 20,\n    padding: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 6,\n    marginBottom: 20, // Bottom margin added to create space between logout button and screen edge\n  },\n\n\n  //dependant's pharmacy styling\n  prescriptionRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n  prescriptionInfo: {\n    flex: 1,\n    marginRight: 10,\n  },\n  infoText: {\n    fontSize: 14,\n    color: '#333',\n  },\n  pharmacyRow: {\n    padding: 15,\n    marginVertical: 10,\n    backgroundColor: '#fff',\n    borderRadius: 10,\n    shadowColor: '#000',\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 4,\n    elevation: 3,\n  },\n\n  //HMO-Sponsors table styling\n  policyRow: {\n    flexDirection: 'column',\n    justifyContent: 'space-between',\n    paddingVertical: 6,\n    borderBottomWidth: 1,\n    borderColor: '#eee',\n  },\n  policyName: {\n    fontWeight: '600',\n    fontSize: 16,\n  },\n  policyId: {\n    color: '#666',\n    fontSize: 14,\n  },\n  noSponsorText: {\n    fontStyle: 'italic',\n    color: '#999',\n    marginTop: 8,\n  },\n});\n\nexport default DependantsScreen;\n","import React from 'react';\nimport { StyleSheet } from 'react-native';\nimport { createBottomTabNavigator } from '@react-navigation/bottom-tabs';\nimport ProfileScreen from '../screens/ProfileScreen';\nimport PrescriptionsScreen from '../screens/PrescriptionsScreen';\nimport AppointmentsScreen from '../screens/AppointmentsScreen';\nimport CorrespondenceScreen from '../screens/Correspondence';\nimport DependantsScreen from '../screens/DependantsScreen';\nimport { FontAwesome, MaterialIcons } from '@expo/vector-icons';\n\nconst Tab = createBottomTabNavigator();\n\nconst RootNavigator = () => {\n  return (\n    <Tab.Navigator initialRouteName=\"Profile\"\n      screenOptions={{\n        //headerStyle: styles.headerStyle, // Customizes the header background\n        //headerTintColor: 'white', // Sets the text color for the title\n        //headerTitleStyle: styles.headerTitleStyle, // Customizes the title font style\n        //tabBarStyle: styles.tabBarStyle,\n        //tabBarLabelStyle: styles.tabBarLabelStyle,\n        headerShown: false,\n        tabBarActiveTintColor: '#FF6F00', // Color for the active tab\n        tabBarInactiveTintColor: 'gray', // Color for inactive tabs\n      }}>\n      <Tab.Screen style={styles.title} name=\"Profile\" component={ProfileScreen} options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesome name=\"user\" size={size} color={color} />\n          ),\n        }}/>\n      <Tab.Screen name=\"Appointments\" component={AppointmentsScreen} options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesome name=\"calendar\" size={size} color={color} />\n          ),\n        }}/>\n      <Tab.Screen name=\"Correspondence\" component={CorrespondenceScreen} options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesome name=\"file-text-o\" size={size} color={color} />\n          ),\n        }}/>\n      <Tab.Screen name=\"Dependants\" component={DependantsScreen} options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesome name=\"child\" size={size} color={color} />\n          ),\n        }}/>\n      <Tab.Screen name=\"Prescriptions\" component={PrescriptionsScreen} options={{\n          tabBarIcon: ({ color, size }) => (\n            <FontAwesome name=\"medkit\" size={size} color={color} />\n          ),\n        }}/>\n    </Tab.Navigator>\n  );\n};\n\nconst styles = StyleSheet.create({\n  headerStyle: {\n    backgroundColor: '#FF6F00', // Orange background for the header\n  },\n  headerTitleStyle: {\n    fontWeight: 'bold', // Bold title text\n    fontSize: 20, // Larger font size for the title\n  },\n  tabBarStyle: {\n    //backgroundColor: '#FF6F00', // Orange background for the navigation bar\n    height: 60, // Adjust height as needed\n  },\n  tabBarLabelStyle: {\n    fontSize: 14, // Customize font size\n    fontWeight: 'bold', // Bold text for tab labels\n    color: 'white', // White text for labels\n    backgroundColor: '#FF6F00',\n  },\n});\n\nexport default RootNavigator;\n","import React, { useState } from 'react';\nimport RootNavigator from '../navigation/RootNavigator';\n\n\nconst HomeScreen = ({ navigation }) => {\n  \n  return (\n      <RootNavigator navigation={navigation}/>\n  );\n};\n\n\nexport default HomeScreen;\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, TouchableOpacity, ActivityIndicator, StyleSheet } from 'react-native';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport api from '../services/api';\nimport SecretKeyGenerator from '../components/SecreKeyGenerator';\n\nconst PasswordReset = ({ navigation }) => {\n  const [action, setAction] = useState('activation');\n  const [ppn, setPPN] = useState('');\n  const [nin, setNIN] = useState('');\n  const [dob, setDOB] = useState('');\n  const [password, setPassword] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const handleAccountActivate = async () => {\n    if (!ppn) {\n      setError('Enter a valid PPN.');\n      return;\n    }\n\n    setLoading(true);\n    setError(null);\n\n  \n\n    try {\n      const secretKey = await SecretKeyGenerator();\n      //const response = await api.post('/login', { ppn, nin, dob, action, secretKey });\n      const response = await api.post('/generate_password_reset_link', {\n        ppn: String(ppn), \n        //nin: String(nin), \n        //action: 'activation',\n        //secretKey: secretKey,\n      });\n\n      //const { token, userData } = response.data;\n\n      //if(userData.activationAccountFound){\n      //// Save user info to AsyncStorage\n      //await AsyncStorage.setItem('userToken', token);\n      //await AsyncStorage.setItem('secretKey', secretKey)\n      //await AsyncStorage.setItem('userData', JSON.stringify(userData));\n\n      //// Navigate to the TOTP screen\n      //navigation.replace('TOTP');\n      //}\n    } catch (err) {\n      setError(\n        err.response?.data?.message || 'An error occurred. Please check your credentials and try again.'\n      );\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <View style={styles.container}>\n      <Text style={styles.title}>Password Reset</Text>\n\n      {error && <Text style={styles.errorText}>{error}</Text>}\n\n      <TextInput\n        style={styles.input}\n        placeholder=\"Private Prescription Number (PPN)\"\n        value={ppn}\n        onChangeText={setPPN}\n        keyboardType=\"default\"\n        autoCapitalize=\"none\"\n        textContentType=\"username\"\n      />\n\n    <TouchableOpacity style={styles.button} onPress={handleAccountActivate} disabled={loading}>\n    {loading ? (\n        <ActivityIndicator size=\"small\" color=\"#fff\" />\n    ) : (\n        <Text style={styles.buttonText}>Reset Password</Text>\n    )}\n    </TouchableOpacity>\n\n    <Text style={styles.footerText} onPress={()=>navigation.replace('Login')}>\n        <Text style={styles.footerLink}>Back to Login Page</Text>\n    </Text>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#FFA500', // Bright orange background\n  },\n  title: {\n    color: 'green',\n    fontSize: 28,\n    fontWeight: 'bold',\n    marginBottom: 40,\n  },\n  input: {\n    height: 50,\n    width: '100%',\n    borderColor: '#ddd',\n    borderWidth: 1,\n    borderRadius: 10,\n    marginBottom: 20,\n    paddingLeft: 15,\n    backgroundColor: '#fff',\n    fontSize: 16,\n  },\n  button: {\n    height: 50,\n    width: '100%',\n    backgroundColor: '#008080', // Teal button\n    borderRadius: 10,\n    justifyContent: 'center',\n    alignItems: 'center',\n    marginTop: 20,\n    //opacity: loading ? 0.6 : 1,\n  },\n  buttonText: {\n    color: '#fff',\n    fontSize: 18,\n    fontWeight: 'bold',\n  },\n  errorText: {\n    color: 'red',\n    marginBottom: 20,\n    fontSize: 14,\n  },\n  footerText: {\n    color: '#fff',\n    marginTop: 30,\n    fontSize: 14,\n  },\n  footerLink: {\n    //color: '#FFD700', // Gold color\n    color: 'green',\n    fontWeight: 'bold',\n  },\n});\n\nexport default PasswordReset;\n","import React, { useEffect, useState } from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createStackNavigator } from '@react-navigation/stack';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\n\nimport AccountActivationScreen from './authenticationScreens/AccountActivateScreen';\nimport FirstPasswordScreen from './authenticationScreens/FirstPassword';\nimport LoginScreen from './authenticationScreens/LoginScreen';\nimport TOTPscreen from './authenticationScreens/TOTPscreen';\nimport HomeScreen from './screens/HomeScreen';\nimport PasswordReset from './authenticationScreens/PasswordReset';\n\nconst Stack = createStackNavigator();\n\nexport default function App() {\n  const [isLoggedIn, setIsLoggedIn] = useState(null);  // Initialize as null to wait for AsyncStorage check\n\n  useEffect(() => {\n    const checkToken = async () => {\n      const token = await AsyncStorage.getItem('userToken');\n      const userString = await AsyncStorage.getItem('userData'); \n      const userData = JSON.parse(userString);\n      if (token && userData?.action==='login' && userData?.tokenValidity==='valid') {\n        setIsLoggedIn(true);\n      } else {\n        setIsLoggedIn(false);\n      }\n    };\n    checkToken();\n  }, []);  // Only run once when the app is loaded\n\n  if (isLoggedIn === null) {\n    // Loading state while checking token, you can return a loading screen here if necessary\n    return null;\n  }\n\n  return (\n    <NavigationContainer>\n      {isLoggedIn ? (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"TOTP\" component={TOTPscreen} />\n          <Stack.Screen name=\"Activation\" component={AccountActivationScreen} />\n          <Stack.Screen name=\"FirstPassword\" component={FirstPasswordScreen} />\n          <Stack.Screen name=\"PasswordReset\" component={PasswordReset} />\n        </Stack.Navigator>\n      ) : (\n        <Stack.Navigator screenOptions={{ headerShown: false }}>\n          <Stack.Screen name=\"Login\" component={LoginScreen} />\n          <Stack.Screen name=\"TOTP\" component={TOTPscreen} />\n          <Stack.Screen name=\"Home\" component={HomeScreen} />\n          <Stack.Screen name=\"Activation\" component={AccountActivationScreen} />\n          <Stack.Screen name=\"FirstPassword\" component={FirstPasswordScreen} />\n          <Stack.Screen name=\"PasswordReset\" component={PasswordReset} />\n        </Stack.Navigator>\n      )}\n    </NavigationContainer>\n  );\n}\n","import { registerRootComponent } from 'expo';\n\nimport App from './App';\n\n// registerRootComponent calls AppRegistry.registerComponent('main', () => App);\n// It also ensures that whether you load the app in Expo Go or in a native build,\n// the environment is set up appropriately\nregisterRootComponent(App);\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [595], () => (__webpack_require__(1061)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["axios","create","baseURL","async","Array","map","Math","floor","random","toString","join","styles","StyleSheet","container","flex","justifyContent","alignItems","padding","backgroundColor","title","color","fontSize","fontWeight","marginBottom","input","height","width","borderColor","borderWidth","borderRadius","paddingLeft","button","marginTop","buttonText","errorText","footerText","footerLink","AccountActivationScreen","navigation","action","setAction","useState","ppn","setPPN","nin","setNIN","dob","setDOB","password","setPassword","loading","setLoading","error","setError","_jsxs","View","style","children","_jsx","Text","TextInput","placeholder","value","onChangeText","keyboardType","autoCapitalize","textContentType","TouchableOpacity","onPress","secretKey","SecretKeyGenerator","response","api","post","String","token","userData","data","activationAccountFound","AsyncStorage","setItem","JSON","stringify","replace","err","message","disabled","ActivityIndicator","size","timeStep","digits","getItem","Error","time","Date","now","counter","CryptoJS","Hex","parse","padStart","hmacBytes","offset","parseInt","charAt","length","otp","substr","pow","console","FirstPasswordScreen","passwordRepeat","setPasswordRepeat","secureTextEntry","dgotp","TOTPGenerator","headers","Authorization","status","newToken","LoginScreen","log","TOTPscreen","totp","setTOTP","warn","get","paddingTop","profileHeader","borderBottomLeftRadius","borderBottomRightRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation","profileImage","resizeMode","placeholderImage","placeholderText","sectionTitle","marginVertical","userName","profileDetails","borderTopLeftRadius","borderTopRightRadius","detailText","bold","logoutContainer","policyRow","flexDirection","paddingVertical","borderBottomWidth","policyName","policyId","noSponsorText","fontStyle","ProfileScreen","setUserData","refreshing","setRefreshing","fetchUpdatedData","updatedUserData","Updater","userDataString","parsedData","useEffect","onRefresh","useCallback","ScrollView","refreshControl","RefreshControl","photoUrl","Image","source","uri","user","gender","age","address","credit","policies","policy","index","sponsor","toUpperCase","plan","policyNumber","contact","Button","url","Linking","canOpenURL","openURL","Alert","alert","removeItem","prescriptionRow","prescriptionInfo","marginRight","infoText","pharmacyRow","emptyText","textAlign","logoutButton","PrescriptionsScreen","prescriptions","setPrescriptions","selectedPrescription","setSelectedPrescription","pharmacies","setPharmacies","showPharmacies","setShowPharmacies","FlatList","keyExtractor","item","renderItem","renderPrescription","prescription","date","servicePin","Location","requestForegroundPermissionsAsync","location","getCurrentPositionAsync","coords","sku","latitude","longitude","locatePrescriptionItem","ListEmptyComponent","renderPharmacy","pharmacy","proprietaryName","unitPrice","distance","QRCodeOverlay","visible","qrValue","onClose","Modal","transparent","animationType","modalBackground","modalContainer","QRCode","closeButton","closeButtonText","pickerContainer","alignContent","justifyItems","paddingHorizontal","overflow","picker","appointmentDisplay","bookingForm","paddingBottom","formTitle","buttonContainer","appointmentRow","appointmentInfo","AppointmentsScreen","appointments","setAppointments","showBookingForm","setShowBookingForm","setVisible","selectedRefID","setSelectedRefID","bookingData","setBookingData","searchQuery","appointmentType","destinationID","localBranchID","localConfigID","cancellationReason","setCancellationReason","destinationOptions","setDestinationOptions","encodeURIComponent","destinationSearch","ticketID","renderAppointment","nonproprietaryName","appointmentStatus","window","confirm","e","appointment","handleCancelAppointment","showQRCode","refID","referenceID","Picker","selectedValue","onValueChange","Object","assign","Item","label","type","selectedDestination","find","destination","text","dependants","patient","CorrespondenceScreen","correspondence","setCorrespondence","showAlert","renderCorrespondence","noteTitle","issuedOn","correspondenceReference","responseType","filename","blob","Blob","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","remove","revokeObjectURL","handleDownloadCorrespondence","page","DependantsScreen","CurrentPage","setCurrentPage","subPage","setSubPage","selectedDependant","setSelectedDependant","showDependants","updatedDep","dep","renderDependants","handleSelectedDependant","Tab","createBottomTabNavigator","headerStyle","headerTitleStyle","tabBarStyle","tabBarLabelStyle","RootNavigator","Navigator","initialRouteName","screenOptions","headerShown","tabBarActiveTintColor","tabBarInactiveTintColor","Screen","name","component","options","tabBarIcon","FontAwesome","HomeScreen","PasswordReset","Stack","createStackNavigator","registerRootComponent","isLoggedIn","setIsLoggedIn","userString","tokenValidity","checkToken","NavigationContainer","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","i","fulfilled","j","keys","every","key","splice","r","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","id","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}